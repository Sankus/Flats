#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flats.Views.Manage
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="1gb_x_odessa")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertSettings(Settings instance);
    partial void UpdateSettings(Settings instance);
    partial void DeleteSettings(Settings instance);
    partial void InsertLiveConditions(LiveConditions instance);
    partial void UpdateLiveConditions(LiveConditions instance);
    partial void DeleteLiveConditions(LiveConditions instance);
    partial void InsertObjects_Attributes(Objects_Attributes instance);
    partial void UpdateObjects_Attributes(Objects_Attributes instance);
    partial void DeleteObjects_Attributes(Objects_Attributes instance);
    partial void InsertPages(Pages instance);
    partial void UpdatePages(Pages instance);
    partial void DeletePages(Pages instance);
    partial void InsertPhrase(Phrase instance);
    partial void UpdatePhrase(Phrase instance);
    partial void DeletePhrase(Phrase instance);
    partial void InsertAttributes(Attributes instance);
    partial void UpdateAttributes(Attributes instance);
    partial void DeleteAttributes(Attributes instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertObjects(Objects instance);
    partial void UpdateObjects(Objects instance);
    partial void DeleteObjects(Objects instance);
    partial void InsertObjects_LiveConditions(Objects_LiveConditions instance);
    partial void UpdateObjects_LiveConditions(Objects_LiveConditions instance);
    partial void DeleteObjects_LiveConditions(Objects_LiveConditions instance);
    partial void InsertRating(Rating instance);
    partial void UpdateRating(Rating instance);
    partial void DeleteRating(Rating instance);
    partial void Insertreviews(reviews instance);
    partial void Updatereviews(reviews instance);
    partial void Deletereviews(reviews instance);
    partial void Insertlanguages(languages instance);
    partial void Updatelanguages(languages instance);
    partial void Deletelanguages(languages instance);
    partial void InsertTranslate(Translate instance);
    partial void UpdateTranslate(Translate instance);
    partial void DeleteTranslate(Translate instance);
    #endregion
		
		public dbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__MigrationHistory> @__MigrationHistory
		{
			get
			{
				return this.GetTable<@__MigrationHistory>();
			}
		}
		
		public System.Data.Linq.Table<Settings> Settings
		{
			get
			{
				return this.GetTable<Settings>();
			}
		}
		
		public System.Data.Linq.Table<AspNetRoles> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRoles>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaims> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaims>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogins> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogins>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRoles> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRoles>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUsers> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUsers>();
			}
		}
		
		public System.Data.Linq.Table<LiveConditions> LiveConditions
		{
			get
			{
				return this.GetTable<LiveConditions>();
			}
		}
		
		public System.Data.Linq.Table<Objects_Attributes> Objects_Attributes
		{
			get
			{
				return this.GetTable<Objects_Attributes>();
			}
		}
		
		public System.Data.Linq.Table<Pages> Pages
		{
			get
			{
				return this.GetTable<Pages>();
			}
		}
		
		public System.Data.Linq.Table<Phrase> Phrase
		{
			get
			{
				return this.GetTable<Phrase>();
			}
		}
		
		public System.Data.Linq.Table<Attributes> Attributes
		{
			get
			{
				return this.GetTable<Attributes>();
			}
		}
		
		public System.Data.Linq.Table<Region> Region
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<Objects> Objects
		{
			get
			{
				return this.GetTable<Objects>();
			}
		}
		
		public System.Data.Linq.Table<Objects_LiveConditions> Objects_LiveConditions
		{
			get
			{
				return this.GetTable<Objects_LiveConditions>();
			}
		}
		
		public System.Data.Linq.Table<Rating> Rating
		{
			get
			{
				return this.GetTable<Rating>();
			}
		}
		
		public System.Data.Linq.Table<reviews> reviews
		{
			get
			{
				return this.GetTable<reviews>();
			}
		}
		
		public System.Data.Linq.Table<languages> languages
		{
			get
			{
				return this.GetTable<languages>();
			}
		}
		
		public System.Data.Linq.Table<Translate> Translate
		{
			get
			{
				return this.GetTable<Translate>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[__MigrationHistory]")]
	public partial class @__MigrationHistory
	{
		
		private string _MigrationId;
		
		private string _ContextKey;
		
		private System.Data.Linq.Binary _Model;
		
		private string _ProductVersion;
		
		public @__MigrationHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigrationId", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string MigrationId
		{
			get
			{
				return this._MigrationId;
			}
			set
			{
				if ((this._MigrationId != value))
				{
					this._MigrationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextKey", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string ContextKey
		{
			get
			{
				return this._ContextKey;
			}
			set
			{
				if ((this._ContextKey != value))
				{
					this._ContextKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVersion", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string ProductVersion
		{
			get
			{
				return this._ProductVersion;
			}
			set
			{
				if ((this._ProductVersion != value))
				{
					this._ProductVersion = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Settings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _setting_key;
		
		private string _setting_value;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsetting_keyChanging(string value);
    partial void Onsetting_keyChanged();
    partial void Onsetting_valueChanging(string value);
    partial void Onsetting_valueChanged();
    #endregion
		
		public Settings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_setting_key", DbType="NVarChar(150)")]
		public string setting_key
		{
			get
			{
				return this._setting_key;
			}
			set
			{
				if ((this._setting_key != value))
				{
					this.Onsetting_keyChanging(value);
					this.SendPropertyChanging();
					this._setting_key = value;
					this.SendPropertyChanged("setting_key");
					this.Onsetting_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_setting_value", DbType="NVarChar(MAX)")]
		public string setting_value
		{
			get
			{
				return this._setting_value;
			}
			set
			{
				if ((this._setting_value != value))
				{
					this.Onsetting_valueChanging(value);
					this.SendPropertyChanging();
					this._setting_value = value;
					this.SendPropertyChanged("setting_value");
					this.Onsetting_valueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRoles
	{
		
		private string _Id;
		
		private string _Name;
		
		public AspNetRoles()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaims
	{
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		public AspNetUserClaims()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this._ClaimType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this._ClaimValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogins
	{
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		public AspNetUserLogins()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this._LoginProvider = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this._ProviderKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRoles
	{
		
		private string _UserId;
		
		private string _RoleId;
		
		public AspNetUserRoles()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUsers
	{
		
		private string _Id;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		public AspNetUsers()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this._EmailConfirmed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this._PasswordHash = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this._SecurityStamp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this._PhoneNumberConfirmed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this._TwoFactorEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this._LockoutEndDateUtc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this._LockoutEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this._AccessFailedCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LiveConditions")]
	public partial class LiveConditions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _lc_key;
		
		private string _lc_value;
		
		private EntitySet<Objects_LiveConditions> _Objects_LiveConditions;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onlc_keyChanging(string value);
    partial void Onlc_keyChanged();
    partial void Onlc_valueChanging(string value);
    partial void Onlc_valueChanged();
    #endregion
		
		public LiveConditions()
		{
			this._Objects_LiveConditions = new EntitySet<Objects_LiveConditions>(new Action<Objects_LiveConditions>(this.attach_Objects_LiveConditions), new Action<Objects_LiveConditions>(this.detach_Objects_LiveConditions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lc_key", DbType="NVarChar(50)")]
		public string lc_key
		{
			get
			{
				return this._lc_key;
			}
			set
			{
				if ((this._lc_key != value))
				{
					this.Onlc_keyChanging(value);
					this.SendPropertyChanging();
					this._lc_key = value;
					this.SendPropertyChanged("lc_key");
					this.Onlc_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lc_value", DbType="NVarChar(350)")]
		public string lc_value
		{
			get
			{
				return this._lc_value;
			}
			set
			{
				if ((this._lc_value != value))
				{
					this.Onlc_valueChanging(value);
					this.SendPropertyChanging();
					this._lc_value = value;
					this.SendPropertyChanged("lc_value");
					this.Onlc_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LiveConditions_Objects_LiveConditions", Storage="_Objects_LiveConditions", ThisKey="id", OtherKey="lc_id")]
		public EntitySet<Objects_LiveConditions> Objects_LiveConditions
		{
			get
			{
				return this._Objects_LiveConditions;
			}
			set
			{
				this._Objects_LiveConditions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Objects_LiveConditions(Objects_LiveConditions entity)
		{
			this.SendPropertyChanging();
			entity.LiveConditions = this;
		}
		
		private void detach_Objects_LiveConditions(Objects_LiveConditions entity)
		{
			this.SendPropertyChanging();
			entity.LiveConditions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Objects_Attributes")]
	public partial class Objects_Attributes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _object_id;
		
		private int _attribute_id;
		
		private EntityRef<Attributes> _Attributes;
		
		private EntityRef<Objects> _Objects;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onobject_idChanging(int value);
    partial void Onobject_idChanged();
    partial void Onattribute_idChanging(int value);
    partial void Onattribute_idChanged();
    #endregion
		
		public Objects_Attributes()
		{
			this._Attributes = default(EntityRef<Attributes>);
			this._Objects = default(EntityRef<Objects>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_object_id", DbType="Int NOT NULL")]
		public int object_id
		{
			get
			{
				return this._object_id;
			}
			set
			{
				if ((this._object_id != value))
				{
					if (this._Objects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onobject_idChanging(value);
					this.SendPropertyChanging();
					this._object_id = value;
					this.SendPropertyChanged("object_id");
					this.Onobject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attribute_id", DbType="Int NOT NULL")]
		public int attribute_id
		{
			get
			{
				return this._attribute_id;
			}
			set
			{
				if ((this._attribute_id != value))
				{
					if (this._Attributes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onattribute_idChanging(value);
					this.SendPropertyChanging();
					this._attribute_id = value;
					this.SendPropertyChanged("attribute_id");
					this.Onattribute_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attributes_Objects_Attributes", Storage="_Attributes", ThisKey="attribute_id", OtherKey="id", IsForeignKey=true)]
		public Attributes Attributes
		{
			get
			{
				return this._Attributes.Entity;
			}
			set
			{
				Attributes previousValue = this._Attributes.Entity;
				if (((previousValue != value) 
							|| (this._Attributes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attributes.Entity = null;
						previousValue.Objects_Attributes.Remove(this);
					}
					this._Attributes.Entity = value;
					if ((value != null))
					{
						value.Objects_Attributes.Add(this);
						this._attribute_id = value.id;
					}
					else
					{
						this._attribute_id = default(int);
					}
					this.SendPropertyChanged("Attributes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Objects_Objects_Attributes", Storage="_Objects", ThisKey="object_id", OtherKey="ID", IsForeignKey=true)]
		public Objects Objects
		{
			get
			{
				return this._Objects.Entity;
			}
			set
			{
				Objects previousValue = this._Objects.Entity;
				if (((previousValue != value) 
							|| (this._Objects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Objects.Entity = null;
						previousValue.Objects_Attributes.Remove(this);
					}
					this._Objects.Entity = value;
					if ((value != null))
					{
						value.Objects_Attributes.Add(this);
						this._object_id = value.ID;
					}
					else
					{
						this._object_id = default(int);
					}
					this.SendPropertyChanged("Objects");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
	public partial class Pages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Naim;
		
		private string _Alias;
		
		private string _Text;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNaimChanging(string value);
    partial void OnNaimChanged();
    partial void OnAliasChanging(string value);
    partial void OnAliasChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public Pages()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naim", DbType="NVarChar(250)")]
		public string Naim
		{
			get
			{
				return this._Naim;
			}
			set
			{
				if ((this._Naim != value))
				{
					this.OnNaimChanging(value);
					this.SendPropertyChanging();
					this._Naim = value;
					this.SendPropertyChanged("Naim");
					this.OnNaimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alias", DbType="NVarChar(250)")]
		public string Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phrase")]
	public partial class Phrase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _phrase_key;
		
		private EntitySet<Translate> _Translate;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onphrase_keyChanging(string value);
    partial void Onphrase_keyChanged();
    #endregion
		
		public Phrase()
		{
			this._Translate = new EntitySet<Translate>(new Action<Translate>(this.attach_Translate), new Action<Translate>(this.detach_Translate));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phrase_key", DbType="NVarChar(250)")]
		public string phrase_key
		{
			get
			{
				return this._phrase_key;
			}
			set
			{
				if ((this._phrase_key != value))
				{
					this.Onphrase_keyChanging(value);
					this.SendPropertyChanging();
					this._phrase_key = value;
					this.SendPropertyChanged("phrase_key");
					this.Onphrase_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phrase_Translate", Storage="_Translate", ThisKey="id", OtherKey="PhraseID")]
		public EntitySet<Translate> Translate
		{
			get
			{
				return this._Translate;
			}
			set
			{
				this._Translate.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Translate(Translate entity)
		{
			this.SendPropertyChanging();
			entity.Phrase = this;
		}
		
		private void detach_Translate(Translate entity)
		{
			this.SendPropertyChanging();
			entity.Phrase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attributes")]
	public partial class Attributes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _attr_key;
		
		private System.Data.Linq.Binary _picture;
		
		private EntitySet<Objects_Attributes> _Objects_Attributes;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onattr_keyChanging(string value);
    partial void Onattr_keyChanged();
    partial void OnpictureChanging(System.Data.Linq.Binary value);
    partial void OnpictureChanged();
    #endregion
		
		public Attributes()
		{
			this._Objects_Attributes = new EntitySet<Objects_Attributes>(new Action<Objects_Attributes>(this.attach_Objects_Attributes), new Action<Objects_Attributes>(this.detach_Objects_Attributes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attr_key", DbType="NVarChar(250)")]
		public string attr_key
		{
			get
			{
				return this._attr_key;
			}
			set
			{
				if ((this._attr_key != value))
				{
					this.Onattr_keyChanging(value);
					this.SendPropertyChanging();
					this._attr_key = value;
					this.SendPropertyChanged("attr_key");
					this.Onattr_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attributes_Objects_Attributes", Storage="_Objects_Attributes", ThisKey="id", OtherKey="attribute_id")]
		public EntitySet<Objects_Attributes> Objects_Attributes
		{
			get
			{
				return this._Objects_Attributes;
			}
			set
			{
				this._Objects_Attributes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Objects_Attributes(Objects_Attributes entity)
		{
			this.SendPropertyChanging();
			entity.Attributes = this;
		}
		
		private void detach_Objects_Attributes(Objects_Attributes entity)
		{
			this.SendPropertyChanging();
			entity.Attributes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Naim;
		
		private EntitySet<Objects> _Objects;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNaimChanging(string value);
    partial void OnNaimChanged();
    #endregion
		
		public Region()
		{
			this._Objects = new EntitySet<Objects>(new Action<Objects>(this.attach_Objects), new Action<Objects>(this.detach_Objects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naim", DbType="NVarChar(150)")]
		public string Naim
		{
			get
			{
				return this._Naim;
			}
			set
			{
				if ((this._Naim != value))
				{
					this.OnNaimChanging(value);
					this.SendPropertyChanging();
					this._Naim = value;
					this.SendPropertyChanged("Naim");
					this.OnNaimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Objects", Storage="_Objects", ThisKey="ID", OtherKey="region_id")]
		public EntitySet<Objects> Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				this._Objects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Objects(Objects entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_Objects(Objects entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Objects")]
	public partial class Objects : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _type;
		
		private int _region_id;
		
		private string _header;
		
		private string _address;
		
		private System.Nullable<int> _rooms_count;
		
		private System.Nullable<int> _guests_count;
		
		private System.Nullable<decimal> _price1;
		
		private System.Nullable<decimal> _price2;
		
		private System.Nullable<decimal> _price5;
		
		private System.Nullable<decimal> _price14;
		
		private System.Nullable<decimal> _rate;
		
		private string _desc_body;
		
		private System.Data.Linq.Binary _pic1large;
		
		private System.Data.Linq.Binary _pic2large;
		
		private System.Data.Linq.Binary _pic1;
		
		private System.Data.Linq.Binary _pic2;
		
		private System.Data.Linq.Binary _pic3;
		
		private System.Data.Linq.Binary _pic4;
		
		private EntitySet<Objects_Attributes> _Objects_Attributes;
		
		private EntitySet<Objects_LiveConditions> _Objects_LiveConditions;
		
		private EntityRef<Region> _Region;
		
		private EntityRef<Rating> _Rating;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntypeChanging(System.Nullable<int> value);
    partial void OntypeChanged();
    partial void Onregion_idChanging(int value);
    partial void Onregion_idChanged();
    partial void OnheaderChanging(string value);
    partial void OnheaderChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onrooms_countChanging(System.Nullable<int> value);
    partial void Onrooms_countChanged();
    partial void Onguests_countChanging(System.Nullable<int> value);
    partial void Onguests_countChanged();
    partial void Onprice1Changing(System.Nullable<decimal> value);
    partial void Onprice1Changed();
    partial void Onprice2Changing(System.Nullable<decimal> value);
    partial void Onprice2Changed();
    partial void Onprice5Changing(System.Nullable<decimal> value);
    partial void Onprice5Changed();
    partial void Onprice14Changing(System.Nullable<decimal> value);
    partial void Onprice14Changed();
    partial void OnrateChanging(System.Nullable<decimal> value);
    partial void OnrateChanged();
    partial void Ondesc_bodyChanging(string value);
    partial void Ondesc_bodyChanged();
    partial void Onpic1largeChanging(System.Data.Linq.Binary value);
    partial void Onpic1largeChanged();
    partial void Onpic2largeChanging(System.Data.Linq.Binary value);
    partial void Onpic2largeChanged();
    partial void Onpic1Changing(System.Data.Linq.Binary value);
    partial void Onpic1Changed();
    partial void Onpic2Changing(System.Data.Linq.Binary value);
    partial void Onpic2Changed();
    partial void Onpic3Changing(System.Data.Linq.Binary value);
    partial void Onpic3Changed();
    partial void Onpic4Changing(System.Data.Linq.Binary value);
    partial void Onpic4Changed();
    #endregion
		
		public Objects()
		{
			this._Objects_Attributes = new EntitySet<Objects_Attributes>(new Action<Objects_Attributes>(this.attach_Objects_Attributes), new Action<Objects_Attributes>(this.detach_Objects_Attributes));
			this._Objects_LiveConditions = new EntitySet<Objects_LiveConditions>(new Action<Objects_LiveConditions>(this.attach_Objects_LiveConditions), new Action<Objects_LiveConditions>(this.detach_Objects_LiveConditions));
			this._Region = default(EntityRef<Region>);
			this._Rating = default(EntityRef<Rating>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Rating.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int")]
		public System.Nullable<int> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_id", DbType="Int NOT NULL")]
		public int region_id
		{
			get
			{
				return this._region_id;
			}
			set
			{
				if ((this._region_id != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onregion_idChanging(value);
					this.SendPropertyChanging();
					this._region_id = value;
					this.SendPropertyChanged("region_id");
					this.Onregion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_header", DbType="NVarChar(150)")]
		public string header
		{
			get
			{
				return this._header;
			}
			set
			{
				if ((this._header != value))
				{
					this.OnheaderChanging(value);
					this.SendPropertyChanging();
					this._header = value;
					this.SendPropertyChanged("header");
					this.OnheaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(250)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rooms_count", DbType="Int")]
		public System.Nullable<int> rooms_count
		{
			get
			{
				return this._rooms_count;
			}
			set
			{
				if ((this._rooms_count != value))
				{
					this.Onrooms_countChanging(value);
					this.SendPropertyChanging();
					this._rooms_count = value;
					this.SendPropertyChanged("rooms_count");
					this.Onrooms_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guests_count", DbType="Int")]
		public System.Nullable<int> guests_count
		{
			get
			{
				return this._guests_count;
			}
			set
			{
				if ((this._guests_count != value))
				{
					this.Onguests_countChanging(value);
					this.SendPropertyChanging();
					this._guests_count = value;
					this.SendPropertyChanged("guests_count");
					this.Onguests_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price1", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price1
		{
			get
			{
				return this._price1;
			}
			set
			{
				if ((this._price1 != value))
				{
					this.Onprice1Changing(value);
					this.SendPropertyChanging();
					this._price1 = value;
					this.SendPropertyChanged("price1");
					this.Onprice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price2", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price2
		{
			get
			{
				return this._price2;
			}
			set
			{
				if ((this._price2 != value))
				{
					this.Onprice2Changing(value);
					this.SendPropertyChanging();
					this._price2 = value;
					this.SendPropertyChanged("price2");
					this.Onprice2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price5", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price5
		{
			get
			{
				return this._price5;
			}
			set
			{
				if ((this._price5 != value))
				{
					this.Onprice5Changing(value);
					this.SendPropertyChanging();
					this._price5 = value;
					this.SendPropertyChanged("price5");
					this.Onprice5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price14", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price14
		{
			get
			{
				return this._price14;
			}
			set
			{
				if ((this._price14 != value))
				{
					this.Onprice14Changing(value);
					this.SendPropertyChanging();
					this._price14 = value;
					this.SendPropertyChanged("price14");
					this.Onprice14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rate", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> rate
		{
			get
			{
				return this._rate;
			}
			set
			{
				if ((this._rate != value))
				{
					this.OnrateChanging(value);
					this.SendPropertyChanging();
					this._rate = value;
					this.SendPropertyChanged("rate");
					this.OnrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desc_body", DbType="NVarChar(MAX)")]
		public string desc_body
		{
			get
			{
				return this._desc_body;
			}
			set
			{
				if ((this._desc_body != value))
				{
					this.Ondesc_bodyChanging(value);
					this.SendPropertyChanging();
					this._desc_body = value;
					this.SendPropertyChanged("desc_body");
					this.Ondesc_bodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic1large", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary pic1large
		{
			get
			{
				return this._pic1large;
			}
			set
			{
				if ((this._pic1large != value))
				{
					this.Onpic1largeChanging(value);
					this.SendPropertyChanging();
					this._pic1large = value;
					this.SendPropertyChanged("pic1large");
					this.Onpic1largeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic2large", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary pic2large
		{
			get
			{
				return this._pic2large;
			}
			set
			{
				if ((this._pic2large != value))
				{
					this.Onpic2largeChanging(value);
					this.SendPropertyChanging();
					this._pic2large = value;
					this.SendPropertyChanged("pic2large");
					this.Onpic2largeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic1", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary pic1
		{
			get
			{
				return this._pic1;
			}
			set
			{
				if ((this._pic1 != value))
				{
					this.Onpic1Changing(value);
					this.SendPropertyChanging();
					this._pic1 = value;
					this.SendPropertyChanged("pic1");
					this.Onpic1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic2", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary pic2
		{
			get
			{
				return this._pic2;
			}
			set
			{
				if ((this._pic2 != value))
				{
					this.Onpic2Changing(value);
					this.SendPropertyChanging();
					this._pic2 = value;
					this.SendPropertyChanged("pic2");
					this.Onpic2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic3", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary pic3
		{
			get
			{
				return this._pic3;
			}
			set
			{
				if ((this._pic3 != value))
				{
					this.Onpic3Changing(value);
					this.SendPropertyChanging();
					this._pic3 = value;
					this.SendPropertyChanged("pic3");
					this.Onpic3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic4", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary pic4
		{
			get
			{
				return this._pic4;
			}
			set
			{
				if ((this._pic4 != value))
				{
					this.Onpic4Changing(value);
					this.SendPropertyChanging();
					this._pic4 = value;
					this.SendPropertyChanged("pic4");
					this.Onpic4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Objects_Objects_Attributes", Storage="_Objects_Attributes", ThisKey="ID", OtherKey="object_id")]
		public EntitySet<Objects_Attributes> Objects_Attributes
		{
			get
			{
				return this._Objects_Attributes;
			}
			set
			{
				this._Objects_Attributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Objects_Objects_LiveConditions", Storage="_Objects_LiveConditions", ThisKey="ID", OtherKey="object_id")]
		public EntitySet<Objects_LiveConditions> Objects_LiveConditions
		{
			get
			{
				return this._Objects_LiveConditions;
			}
			set
			{
				this._Objects_LiveConditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Objects", Storage="_Region", ThisKey="region_id", OtherKey="ID", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.Objects.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.Objects.Add(this);
						this._region_id = value.ID;
					}
					else
					{
						this._region_id = default(int);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_Objects", Storage="_Rating", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Rating Rating
		{
			get
			{
				return this._Rating.Entity;
			}
			set
			{
				Rating previousValue = this._Rating.Entity;
				if (((previousValue != value) 
							|| (this._Rating.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rating.Entity = null;
						previousValue.Objects.Remove(this);
					}
					this._Rating.Entity = value;
					if ((value != null))
					{
						value.Objects.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Rating");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Objects_Attributes(Objects_Attributes entity)
		{
			this.SendPropertyChanging();
			entity.Objects = this;
		}
		
		private void detach_Objects_Attributes(Objects_Attributes entity)
		{
			this.SendPropertyChanging();
			entity.Objects = null;
		}
		
		private void attach_Objects_LiveConditions(Objects_LiveConditions entity)
		{
			this.SendPropertyChanging();
			entity.Objects = this;
		}
		
		private void detach_Objects_LiveConditions(Objects_LiveConditions entity)
		{
			this.SendPropertyChanging();
			entity.Objects = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Objects_LiveConditions")]
	public partial class Objects_LiveConditions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _object_id;
		
		private int _lc_id;
		
		private string @__value;
		
		private EntityRef<Objects> _Objects;
		
		private EntityRef<LiveConditions> _LiveConditions;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onobject_idChanging(int value);
    partial void Onobject_idChanged();
    partial void Onlc_idChanging(int value);
    partial void Onlc_idChanged();
    partial void On_valueChanging(string value);
    partial void On_valueChanged();
    #endregion
		
		public Objects_LiveConditions()
		{
			this._Objects = default(EntityRef<Objects>);
			this._LiveConditions = default(EntityRef<LiveConditions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_object_id", DbType="Int NOT NULL")]
		public int object_id
		{
			get
			{
				return this._object_id;
			}
			set
			{
				if ((this._object_id != value))
				{
					if (this._Objects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onobject_idChanging(value);
					this.SendPropertyChanging();
					this._object_id = value;
					this.SendPropertyChanged("object_id");
					this.Onobject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lc_id", DbType="Int NOT NULL")]
		public int lc_id
		{
			get
			{
				return this._lc_id;
			}
			set
			{
				if ((this._lc_id != value))
				{
					if (this._LiveConditions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlc_idChanging(value);
					this.SendPropertyChanging();
					this._lc_id = value;
					this.SendPropertyChanged("lc_id");
					this.Onlc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_value]", Storage="__value", DbType="NVarChar(300)")]
		public string _value
		{
			get
			{
				return this.@__value;
			}
			set
			{
				if ((this.@__value != value))
				{
					this.On_valueChanging(value);
					this.SendPropertyChanging();
					this.@__value = value;
					this.SendPropertyChanged("_value");
					this.On_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Objects_Objects_LiveConditions", Storage="_Objects", ThisKey="object_id", OtherKey="ID", IsForeignKey=true)]
		public Objects Objects
		{
			get
			{
				return this._Objects.Entity;
			}
			set
			{
				Objects previousValue = this._Objects.Entity;
				if (((previousValue != value) 
							|| (this._Objects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Objects.Entity = null;
						previousValue.Objects_LiveConditions.Remove(this);
					}
					this._Objects.Entity = value;
					if ((value != null))
					{
						value.Objects_LiveConditions.Add(this);
						this._object_id = value.ID;
					}
					else
					{
						this._object_id = default(int);
					}
					this.SendPropertyChanged("Objects");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LiveConditions_Objects_LiveConditions", Storage="_LiveConditions", ThisKey="lc_id", OtherKey="id", IsForeignKey=true)]
		public LiveConditions LiveConditions
		{
			get
			{
				return this._LiveConditions.Entity;
			}
			set
			{
				LiveConditions previousValue = this._LiveConditions.Entity;
				if (((previousValue != value) 
							|| (this._LiveConditions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LiveConditions.Entity = null;
						previousValue.Objects_LiveConditions.Remove(this);
					}
					this._LiveConditions.Entity = value;
					if ((value != null))
					{
						value.Objects_LiveConditions.Add(this);
						this._lc_id = value.id;
					}
					else
					{
						this._lc_id = default(int);
					}
					this.SendPropertyChanged("LiveConditions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rating")]
	public partial class Rating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<decimal> _rating;
		
		private System.Nullable<decimal> _cleaness;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<decimal> _services;
		
		private System.Nullable<decimal> _comfort;
		
		private System.Nullable<decimal> _region;
		
		private string _Naim;
		
		private string _address;
		
		private EntitySet<Objects> _Objects;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnratingChanging(System.Nullable<decimal> value);
    partial void OnratingChanged();
    partial void OncleanessChanging(System.Nullable<decimal> value);
    partial void OncleanessChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnservicesChanging(System.Nullable<decimal> value);
    partial void OnservicesChanged();
    partial void OncomfortChanging(System.Nullable<decimal> value);
    partial void OncomfortChanged();
    partial void OnregionChanging(System.Nullable<decimal> value);
    partial void OnregionChanged();
    partial void OnNaimChanging(string value);
    partial void OnNaimChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    #endregion
		
		public Rating()
		{
			this._Objects = new EntitySet<Objects>(new Action<Objects>(this.attach_Objects), new Action<Objects>(this.detach_Objects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cleaness", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> cleaness
		{
			get
			{
				return this._cleaness;
			}
			set
			{
				if ((this._cleaness != value))
				{
					this.OncleanessChanging(value);
					this.SendPropertyChanging();
					this._cleaness = value;
					this.SendPropertyChanged("cleaness");
					this.OncleanessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_services", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> services
		{
			get
			{
				return this._services;
			}
			set
			{
				if ((this._services != value))
				{
					this.OnservicesChanging(value);
					this.SendPropertyChanging();
					this._services = value;
					this.SendPropertyChanged("services");
					this.OnservicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comfort", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> comfort
		{
			get
			{
				return this._comfort;
			}
			set
			{
				if ((this._comfort != value))
				{
					this.OncomfortChanging(value);
					this.SendPropertyChanging();
					this._comfort = value;
					this.SendPropertyChanged("comfort");
					this.OncomfortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> region
		{
			get
			{
				return this._region;
			}
			set
			{
				if ((this._region != value))
				{
					this.OnregionChanging(value);
					this.SendPropertyChanging();
					this._region = value;
					this.SendPropertyChanged("region");
					this.OnregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naim", DbType="NVarChar(150)")]
		public string Naim
		{
			get
			{
				return this._Naim;
			}
			set
			{
				if ((this._Naim != value))
				{
					this.OnNaimChanging(value);
					this.SendPropertyChanging();
					this._Naim = value;
					this.SendPropertyChanged("Naim");
					this.OnNaimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(250)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_Objects", Storage="_Objects", ThisKey="ID", OtherKey="ID")]
		public EntitySet<Objects> Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				this._Objects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Objects(Objects entity)
		{
			this.SendPropertyChanging();
			entity.Rating = this;
		}
		
		private void detach_Objects(Objects entity)
		{
			this.SendPropertyChanging();
			entity.Rating = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reviews")]
	public partial class reviews : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _cleaness;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<decimal> _services;
		
		private System.Nullable<decimal> _comfort;
		
		private System.Nullable<decimal> _region;
		
		private System.Nullable<int> _object_id;
		
		private string _header;
		
		private string _body;
		
		private System.Nullable<decimal> _total;
		
		private string _Name;
		
		private string _Surname;
		
		private System.Nullable<System.DateTime> _data;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncleanessChanging(System.Nullable<decimal> value);
    partial void OncleanessChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnservicesChanging(System.Nullable<decimal> value);
    partial void OnservicesChanged();
    partial void OncomfortChanging(System.Nullable<decimal> value);
    partial void OncomfortChanged();
    partial void OnregionChanging(System.Nullable<decimal> value);
    partial void OnregionChanged();
    partial void Onobject_idChanging(System.Nullable<int> value);
    partial void Onobject_idChanged();
    partial void OnheaderChanging(string value);
    partial void OnheaderChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OntotalChanging(System.Nullable<decimal> value);
    partial void OntotalChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OndataChanging(System.Nullable<System.DateTime> value);
    partial void OndataChanged();
    #endregion
		
		public reviews()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cleaness", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> cleaness
		{
			get
			{
				return this._cleaness;
			}
			set
			{
				if ((this._cleaness != value))
				{
					this.OncleanessChanging(value);
					this.SendPropertyChanging();
					this._cleaness = value;
					this.SendPropertyChanged("cleaness");
					this.OncleanessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_services", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> services
		{
			get
			{
				return this._services;
			}
			set
			{
				if ((this._services != value))
				{
					this.OnservicesChanging(value);
					this.SendPropertyChanging();
					this._services = value;
					this.SendPropertyChanged("services");
					this.OnservicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comfort", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> comfort
		{
			get
			{
				return this._comfort;
			}
			set
			{
				if ((this._comfort != value))
				{
					this.OncomfortChanging(value);
					this.SendPropertyChanging();
					this._comfort = value;
					this.SendPropertyChanged("comfort");
					this.OncomfortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> region
		{
			get
			{
				return this._region;
			}
			set
			{
				if ((this._region != value))
				{
					this.OnregionChanging(value);
					this.SendPropertyChanging();
					this._region = value;
					this.SendPropertyChanged("region");
					this.OnregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_object_id", DbType="Int")]
		public System.Nullable<int> object_id
		{
			get
			{
				return this._object_id;
			}
			set
			{
				if ((this._object_id != value))
				{
					this.Onobject_idChanging(value);
					this.SendPropertyChanging();
					this._object_id = value;
					this.SendPropertyChanged("object_id");
					this.Onobject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_header", DbType="NVarChar(150)")]
		public string header
		{
			get
			{
				return this._header;
			}
			set
			{
				if ((this._header != value))
				{
					this.OnheaderChanging(value);
					this.SendPropertyChanging();
					this._header = value;
					this.SendPropertyChanged("header");
					this.OnheaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="NVarChar(MAX)")]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime")]
		public System.Nullable<System.DateTime> data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.languages")]
	public partial class languages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _language;
		
		private string _short_code;
		
		private EntitySet<Translate> _Translate;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlanguageChanging(string value);
    partial void OnlanguageChanged();
    partial void Onshort_codeChanging(string value);
    partial void Onshort_codeChanged();
    #endregion
		
		public languages()
		{
			this._Translate = new EntitySet<Translate>(new Action<Translate>(this.attach_Translate), new Action<Translate>(this.detach_Translate));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language", DbType="NVarChar(150)")]
		public string language
		{
			get
			{
				return this._language;
			}
			set
			{
				if ((this._language != value))
				{
					this.OnlanguageChanging(value);
					this.SendPropertyChanging();
					this._language = value;
					this.SendPropertyChanged("language");
					this.OnlanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_short_code", DbType="NVarChar(3)")]
		public string short_code
		{
			get
			{
				return this._short_code;
			}
			set
			{
				if ((this._short_code != value))
				{
					this.Onshort_codeChanging(value);
					this.SendPropertyChanging();
					this._short_code = value;
					this.SendPropertyChanged("short_code");
					this.Onshort_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="languages_Translate", Storage="_Translate", ThisKey="id", OtherKey="LanguageID")]
		public EntitySet<Translate> Translate
		{
			get
			{
				return this._Translate;
			}
			set
			{
				this._Translate.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Translate(Translate entity)
		{
			this.SendPropertyChanging();
			entity.languages = this;
		}
		
		private void detach_Translate(Translate entity)
		{
			this.SendPropertyChanging();
			entity.languages = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Translate")]
	public partial class Translate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PhraseID;
		
		private System.Nullable<int> _LanguageID;
		
		private string _Translation;
		
		private EntityRef<Phrase> _Phrase;
		
		private EntityRef<languages> _languages;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPhraseIDChanging(System.Nullable<int> value);
    partial void OnPhraseIDChanged();
    partial void OnLanguageIDChanging(System.Nullable<int> value);
    partial void OnLanguageIDChanged();
    partial void OnTranslationChanging(string value);
    partial void OnTranslationChanged();
    #endregion
		
		public Translate()
		{
			this._Phrase = default(EntityRef<Phrase>);
			this._languages = default(EntityRef<languages>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhraseID", DbType="Int")]
		public System.Nullable<int> PhraseID
		{
			get
			{
				return this._PhraseID;
			}
			set
			{
				if ((this._PhraseID != value))
				{
					if (this._Phrase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhraseIDChanging(value);
					this.SendPropertyChanging();
					this._PhraseID = value;
					this.SendPropertyChanged("PhraseID");
					this.OnPhraseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int")]
		public System.Nullable<int> LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._languages.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Translate", Storage="_Translation", DbType="NVarChar(MAX)")]
		public string Translation
		{
			get
			{
				return this._Translation;
			}
			set
			{
				if ((this._Translation != value))
				{
					this.OnTranslationChanging(value);
					this.SendPropertyChanging();
					this._Translation = value;
					this.SendPropertyChanged("Translation");
					this.OnTranslationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phrase_Translate", Storage="_Phrase", ThisKey="PhraseID", OtherKey="id", IsForeignKey=true)]
		public Phrase Phrase
		{
			get
			{
				return this._Phrase.Entity;
			}
			set
			{
				Phrase previousValue = this._Phrase.Entity;
				if (((previousValue != value) 
							|| (this._Phrase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phrase.Entity = null;
						previousValue.Translate.Remove(this);
					}
					this._Phrase.Entity = value;
					if ((value != null))
					{
						value.Translate.Add(this);
						this._PhraseID = value.id;
					}
					else
					{
						this._PhraseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phrase");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="languages_Translate", Storage="_languages", ThisKey="LanguageID", OtherKey="id", IsForeignKey=true)]
		public languages languages
		{
			get
			{
				return this._languages.Entity;
			}
			set
			{
				languages previousValue = this._languages.Entity;
				if (((previousValue != value) 
							|| (this._languages.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._languages.Entity = null;
						previousValue.Translate.Remove(this);
					}
					this._languages.Entity = value;
					if ((value != null))
					{
						value.Translate.Add(this);
						this._LanguageID = value.id;
					}
					else
					{
						this._LanguageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("languages");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
